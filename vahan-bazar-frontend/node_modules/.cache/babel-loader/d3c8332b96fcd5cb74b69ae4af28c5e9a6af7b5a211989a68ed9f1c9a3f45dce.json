{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[token,setToken]=useState(localStorage.getItem('token'));const[loading,setLoading]=useState(true);useEffect(()=>{if(token){axios.defaults.headers.common['Authorization']=\"Bearer \".concat(token);// You could fetch user details here\n}else{delete axios.defaults.headers.common['Authorization'];}setLoading(false);},[token]);const login=async(email,password)=>{try{const response=await axios.post('http://localhost:5000/api/auth/login',{email,password});const{token:newToken,user:userData}=response.data;setToken(newToken);setUser(userData);localStorage.setItem('token',newToken);axios.defaults.headers.common['Authorization']=\"Bearer \".concat(newToken);}catch(error){throw new Error('Login failed');}};const signup=async(name,email,password,phone)=>{try{const response=await axios.post('http://localhost:5000/api/auth/signup',{name,email,password,phone});const{token:newToken,user:userData}=response.data;setToken(newToken);setUser(userData);localStorage.setItem('token',newToken);axios.defaults.headers.common['Authorization']=\"Bearer \".concat(newToken);}catch(error){throw new Error('Signup failed');}};const logout=()=>{setToken(null);setUser(null);localStorage.removeItem('token');delete axios.defaults.headers.common['Authorization'];};const value={user,token,login,signup,logout,loading};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","defaults","headers","common","concat","login","email","password","response","post","newToken","userData","data","setItem","error","signup","name","phone","logout","removeItem","value","Provider"],"sources":["C:/Users/akhil/OneDrive/Desktop/vahanBazar/vahan-bazar-frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport axios from 'axios';\r\n\r\ninterface User {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  role: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  token: string | null;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  signup: (name: string, email: string, password: string, phone: string) => Promise<void>;\r\n  logout: () => void;\r\n  loading: boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [token, setToken] = useState<string | null>(localStorage.getItem('token'));\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      // You could fetch user details here\r\n    } else {\r\n      delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n    setLoading(false);\r\n  }, [token]);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/auth/login', {\r\n        email,\r\n        password,\r\n      });\r\n      \r\n      const { token: newToken, user: userData } = response.data;\r\n      setToken(newToken);\r\n      setUser(userData);\r\n      localStorage.setItem('token', newToken);\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\r\n    } catch (error) {\r\n      throw new Error('Login failed');\r\n    }\r\n  };\r\n\r\n  const signup = async (name: string, email: string, password: string, phone: string) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/auth/signup', {\r\n        name,\r\n        email,\r\n        password,\r\n        phone,\r\n      });\r\n      \r\n      const { token: newToken, user: userData } = response.data;\r\n      setToken(newToken);\r\n      setUser(userData);\r\n      localStorage.setItem('token', newToken);\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${newToken}`;\r\n    } catch (error) {\r\n      throw new Error('Signup failed');\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setToken(null);\r\n    setUser(null);\r\n    localStorage.removeItem('token');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    login,\r\n    signup,\r\n    logout,\r\n    loading,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}